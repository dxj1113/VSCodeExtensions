{
	"name": "code-spell-checker",
	"description": "Spelling checker for source code",
	"displayName": "Code Spell Checker",
	"icon": "images/SpellCheck.png",
	"author": "Jason Dent",
	"license": "MIT",
	"version": "1.4.0",
	"publisher": "streetsidesoftware",
	"repository": {
		"type": "git",
		"url": "https://github.com/Jason-Rev/vscode-spell-checker"
	},
	"bugs": {
		"url": "https://github.com/Jason-Rev/vscode-spell-checker/issues"
	},
	"homepage": "https://github.com/Jason-Rev/vscode-spell-checker/blob/master/client/README.md",
	"engines": {
		"vscode": "^1.14.0"
	},
	"categories": [
		"Linters",
		"Other"
	],
	"keywords": [
		"spell",
		"checker",
		"spellchecker"
	],
	"qna": "marketplace",
	"activationEvents": [
		"*"
	],
	"main": "./out/src/extension",
	"contributes": {
		"menus": {
			"editor/context": [
				{
					"command": "cSpell.displayCSpellInfo",
					"when": "editorTextFocus",
					"group": "A_cspell"
				}
			]
		},
		"commands": [
			{
				"command": "cSpell.addWordToDictionary",
				"title": "Add Word to Dictionary"
			},
			{
				"command": "cSpell.addWordToUserDictionary",
				"title": "Add Word to Global Dictionary"
			},
			{
				"command": "cSpell.enableForWorkspace",
				"title": "Enable Spell Checking For Workspace"
			},
			{
				"command": "cSpell.disableForWorkspace",
				"title": "Disable Spell Checking For Workspace"
			},
			{
				"command": "cSpell.enableCurrentLanguage",
				"title": "Enable Spell Checking Document Language"
			},
			{
				"command": "cSpell.disableCurrentLanguage",
				"title": "Disable Spell Checking Document Language"
			},
			{
				"command": "cSpell.displayCSpellInfo",
				"title": "Show Spell Checker Configuration Info"
			},
			{
				"command": "cSpell.toggleEnableSpellChecker",
				"title": "Toggle Spell Checking For the Current Workspace"
			}
		],
		"configuration": {
			"type": "object",
			"title": "Code Spell Checker Configuration",
			"properties": {
				"cSpell.language": {
					"type": "string",
					"default": "en",
					"description": "The Language local to use when spell checking. \"en\" and \"en-GB\" are currently supported. "
				},
				"cSpell.maxNumberOfProblems": {
					"type": "number",
					"default": 100,
					"description": "Controls the maximum number of spelling errors per document."
				},
				"cSpell.checkLimit": {
					"type": "number",
					"default": 500,
					"description": "The limit in K-Bytes to be checked in a file."
				},
				"cSpell.numSuggestions": {
					"type": "number",
					"default": 8,
					"description": "Controls the number of suggestions shown."
				},
				"cSpell.minWordLength": {
					"type": "number",
					"default": 4,
					"description": "The minimum length of a word before checking it against a dictionary."
				},
				"cSpell.enabledLanguageIds": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": [
						"c",
						"cpp",
						"csharp",
						"go",
						"handlebars",
						"javascript",
						"javascriptreact",
						"json",
						"latex",
						"markdown",
						"php",
						"plaintext",
						"python",
						"restructuredtext",
						"text",
						"typescript",
						"typescriptreact",
						"yml"
					],
					"description": "Specify file types to spell check."
				},
				"cSpell.import": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": [],
					"description": "List of paths of cspell.json files to import."
				},
				"cSpell.words": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": [],
					"description": "Words to add to dictionary for a workspace."
				},
				"cSpell.userWords": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": [],
					"description": "User words to add to dictionary.  Should only be in the user settings."
				},
				"cSpell.enabled": {
					"type": "boolean",
					"default": true,
					"description": "Enable / Disable the spell checker."
				},
				"cSpell.showStatus": {
					"type": "boolean",
					"default": true,
					"description": "Display the spell checker status on the status bar."
				},
				"cSpell.spellCheckDelayMs": {
					"type": "number",
					"default": 50,
					"description": "Delay in ms after a document has changed before checking it for spelling errors."
				},
				"cSpell.ignorePaths": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": [
						"**/node_modules/**",
						"**/vscode-extension/**",
						"**/.git/**",
						".vscode",
						"typings"
					],
					"description": "Specify paths/files to ignore. (Supports Globs)"
				},
				"cSpell.flagWords": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": [
						"hte"
					],
					"description": "Words to always be flagged as an error."
				},
				"cSpell.patterns": {
					"type": "array",
					"items": {
						"type": "object",
						"items": [
							{
								"id": "name",
								"type": "string",
								"description": "The pattern identifier."
							},
							{
								"id": "pattern",
								"type": "string",
								"description": "Regular expression, default flags are: 'gim'"
							}
						],
						"description": "Define a pattern"
					},
					"default": [],
					"description": "Defines a list of named regular expression patterns that can be used in exclusion or inclusion lists."
				},
				"cSpell.ignoreRegExpList": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": [],
					"description": "List of regular expressions used to exclude the matching text from being checked.\n Example: \"0x[a-f0-9]+\" to skip 0x hex values.\n By default the flags are 'gim'.\n You can specify them like this:\n \"/0x[A-F0-9]/g\" to match only upper case hex numbers.\n Example to match email: \"<?[\\\\w.\\\\-+]+@\\\\w+(\\\\.\\\\w+)+>?\" "
				},
				"cSpell.includeRegExpList": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": [],
					"description": "List of regular expressions used to include text to be spell checked.\nBy default, all text is checked.  Adding regular expresses to this list will limit the text to be spell checked to only text that matches any of the expressions in the list.\nLogic: text to be checked = include - exclude\nNote: Slashes need to be double: \\\\ because it is in a json string. \nExamples:\n* \".*\" -- include everything.\n* \"'(?:[^'\\\\n]|\\\\\\\\')*'\" -- single quote strings. \n"
				},
				"cSpell.allowCompoundWords": {
					"type": "boolean",
					"default": false,
					"description": "Enable / Disable allowing word compounds. true means 'arraylength' would be ok, false means it would not pass."
				},
				"cSpell.languageSettings": {
					"type": "array",
					"description": "Define settings on a per programming language basis.",
					"items": {
						"type": "object",
						"items": [
							{
								"id": "languageId",
								"type": "string",
								"description": "Language Id to apply settings, examples \"*\", \"php\", \"cpp\" "
							},
							{
								"id": "local",
								"type": "string",
								"description": "Optional: Spoken language local used to select dictionary, example: \"en\", \"en-US\" or \"en-GB\" "
							},
							{
								"id": "allowCompoundWords",
								"type": "boolean",
								"description": "Enable / Disable word compounds for a given programming language."
							},
							{
								"id": "dictionaries",
								"type": "array",
								"description": "Add dictionaries to be used in spell checking",
								"items": {
									"type": "string",
									"description": "name of dictionary to use"
								}
							}
						]
					}
				},
				"cSpell.dictionaries": {
					"type": "array",
					"description": "List of dictionaries to use when checking files.",
					"items": {
						"type": "string",
						"description": "Name of dictionary to use."
					}
				},
				"cSpell.dictionaryDefinitions": {
					"type": "array",
					"description": "A List of Dictionary Definitions.",
					"items": {
						"type": "object",
						"items": [
							{
								"id": "name",
								"type": "string",
								"description": "Name of dictionary"
							},
							{
								"id": "path",
								"type": "string",
								"description": "Path to the dictionary file. Relative paths will be relative to the workspace."
							}
						],
						"required": [
							"name",
							"path"
						]
					}
				}
			}
		}
	},
	"scripts": {
		"clean": "rimraf out",
		"clean-build": "npm run clean && npm run build",
		"build": "tsc -p ./",
		"vscode:prepublish": "npm run clean-build",
		"watch": "tsc -watch -p ./",
		"test": "npm run build && mocha --compilers ts:ts-node/register \"src/**/*.test.ts\"",
		"test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch \"src/**/*.test.ts\"",
		"postinstall": "node ./node_modules/vscode/bin/install"
	},
	"devDependencies": {
		"@types/chai": "^4.0.4",
		"@types/comment-json": "^1.1.0",
		"@types/fs-extra": "^4.0.1",
		"@types/mkdirp": "^0.3.29",
		"@types/mocha": "^2.2.42",
		"@types/node": "^8.0.26",
		"@types/pug": "^2.0.4",
		"chai": "^4.1.2",
		"lorem-ipsum": "^1.0.4",
		"mocha": "^3.5.0",
		"pug-cli": "^1.0.0-alpha6",
		"pug-lint": "^2.4.0",
		"rimraf": "^2.6.1",
		"ts-node": "^3.3.0",
		"typescript": "^2.5.2"
	},
	"dependencies": {
		"comment-json": "^1.1.3",
		"fs-extra": "^4.0.1",
		"mkdirp": "^0.5.1",
		"pug": "^2.0.0-rc.3",
		"rxjs": "^5.4.3",
		"tsmerge": "^1.0.4",
		"vscode": "^1.1.4",
		"vscode-languageclient": "^3.3.0"
	},
	"__metadata": {
		"id": "f6dbd813-b0a0-42c1-90ea-10dde9d925a7",
		"publisherId": "67600ca7-88fb-4104-9f7e-dd51c00facf2",
		"publisherDisplayName": "Street Side Software"
	}
}