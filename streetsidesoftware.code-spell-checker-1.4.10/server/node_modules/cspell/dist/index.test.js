"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const cspell = require("./index");
describe('Validate the cspell API', () => {
    it('Tests the default configuration', () => {
        const ext = '.json';
        const languageIds = cspell.getLanguagesForExt(ext);
        const settings = cspell.getDefaultSettings();
        // cspell:ignore jansons
        const text = '{ "name": "Jansons"}';
        const fileSettings = cspell.combineTextAndLanguageSettings(settings, text, languageIds);
        return cspell.validateText(text, fileSettings)
            .then(results => {
            chai_1.expect(results).to.not.be.empty;
            chai_1.expect(results.map(to => to.text)).to.contain('Jansons');
        });
    });
    it('Tests suggestions', function () {
        this.timeout(5000);
        const ext = '.txt';
        const languageIds = cspell.getLanguagesForExt(ext);
        const settings = cspell.getDefaultSettings();
        // cspell:ignore jansons
        const text = '{ "name": "Jansons"}';
        const fileSettings = cspell.combineTextAndLanguageSettings(settings, text, languageIds);
        const finalSettings = cspell.finalizeSettings(fileSettings);
        const dict = cspell.getDictionary(finalSettings);
        // cspell:ignore installsallnecessary
        return dict.then(dict => {
            const results = dict.suggest('installsallnecessary', 10, cspell.CompoundWordsMethod.SEPARATE_WORDS);
            const sugs = results.map(a => a.word);
            chai_1.expect(sugs).to.contain('installs all necessary');
        });
    });
});
//# sourceMappingURL=index.test.js.map